services:
  frontend:
    build: ./frontend
    command: npm run dev
    environment:
      - NEXT_PUBLIC_API_BASE=/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on: [ api ]
    networks: [ hukukbul ]

  api:
    build: ./api
    command: npm run dev
    environment:
      - PORT=${API_PORT}
      - PGHOST=postgres
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGDATABASE=${POSTGRES_DB}
      - PGPORT=5432
      - QDRANT_URL=http://qdrant:6333
      - REDIS_URL=redis://redis:6379
      - AI_URL=http://ai:${AI_PORT}
    volumes:
      - ./api:/app
      - /app/node_modules
    depends_on: [ postgres, qdrant, redis, ai ]
    networks: [ hukukbul ]

  ai:
    build: ./ai
    command: uvicorn main:app --host 0.0.0.0 --port ${AI_PORT} --reload
    environment:
      - PORT=${AI_PORT}
      - LLM_PROVIDER=
      - LLM_API_BASE=http://vllm:8000/v1
      - LLM_API_KEY=
      - LLM_MODEL=Qwen/Qwen2.5-1.5B-Instruct
    volumes:
      - ./ai:/app
    depends_on: [ vllm ]
    networks: [ hukukbul ]

  vllm:
    image: vllm/vllm-openai:latest
    command: >
      --model Qwen/Qwen2.5-1.5B-Instruct
      --tensor-parallel-size 1
      --max-model-len 4096
      --gpu-memory-utilization 0.65
      --dtype float16
    environment:
      - VLLM_WORKER_CONCURRENCY=1
      - VLLM_USE_FLASHINFER=0
    ports:
      - "8001:8000" # test için dış port
    volumes:
      - ./models:/root/.cache/huggingface
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ]
    networks: [ hukukbul ]

  ingest:
    build: ./ingest
    command: python worker.py
    environment:
      - PGHOST=postgres
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGDATABASE=${POSTGRES_DB}
      - QDRANT_URL=http://qdrant:6333
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./ingest:/app
    depends_on: [ postgres, qdrant, redis ]
    networks: [ hukukbul ]

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [ hukukbul ]

  qdrant:
    image: qdrant/qdrant:latest
    volumes:
      - qdrantdata:/qdrant/storage
    networks: [ hukukbul ]

  redis:
    image: redis:7
    networks: [ hukukbul ]

  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./deploy/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on: [ frontend, api ]
    networks: [ hukukbul ]

networks:
  hukukbul:


volumes:
  pgdata:
  qdrantdata:
